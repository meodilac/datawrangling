#Error Code
---Exercise 1: Fixing code ( Here we use users table to pull a list of user email addresses. Edit the query to pull email addresses, but only for non-deleted users)
SELECT email_address
FROM dsv1069.users
WHERE deleted_at is NULL;

----Exercise 2: Fixing code (Use the items table to count the number of items for sale in each category)
SELECT category, COUNT (id) AS Num_items
FROM dsv1069.items
group by category
ORDER BY Num_items DESC;

-----Exercise 3: Fixing code (Select all of the columns from the result when you JOIN the users table to the orders table)
SELECT *
FROM dsv1069.users U JOIN dsv1069.orders O ON U.id = O.user_id
ORDER BY U.id;

-----Exercise 4:
SELECT
COUNT(event_id) AS events
FROM dsv1069.events
WHERE event_name = 'view_item'
----fixing code (This is not the right way to count the number of viewed_item events. Determine what is wrong and correct the error.)
SELECT COUNT(DISTINCT event_id) AS events
FROM dsv1069.events 
WHERE event_name = 'view_item';

----Exercise 5: fixing cost
SELECT COUNT(DISTINCT item_id) AS item_count
FROM dsv1069.orders;

----Exercise 6: For each user figure out IF a user has ordered something, and when their first purchase was. 
---The query below doesn’t return info for any of the users who haven’t ordered anything.
SELECT users.id AS user_id
, MIN(orders.paid_at) AS min_paid
FROM dsv1069.orders
LEFT JOIN dsv1069.orders
  ON users.id = orders.user_id
GROUP BY users.id
ORDER BY min_paid_at DESC;

-----Exercise 7: Figure out what percent of users have ever viewed the user profile page. 
---Check to make sure the number of users adds up, and if not, fix the query.
--Error Codes
SELECT (CASE WHEN first_view IS NULL then False
ELSE true END) AS has_viewed_profile_page
, COUNT(user_id) AS user
FROM (SELECT users.id AS user_id
, MIN(event_time) AS firstview
FROM dsv1069.users
LEFT JOIN dsv1069.events ON event.user_id = user_id
WHERE event_name = 'view_user_profile'
GROUP BY users.id) firstprofileview
GROUP BY (CASE WHEN firstview IS NULL then false
ELSE true END)
--Fixing codes
SELECT (CASE WHEN firstview IS NULL then False
ELSE true END) AS has_viewed_profile_page
, COUNT(user_id) AS user
FROM (SELECT users.id AS user_id
, MIN(event_time) AS firstview
FROM dsv1069.users
LEFT JOIN dsv1069.events ON events.user_id = user_id
AND event_name = 'view_user_profile'
GROUP BY users.id) first_profile_views

GROUP BY has_viewed_profile_page;
